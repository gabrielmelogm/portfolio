name: "[Manager] Docker Build & Publish"

on:
  push:
    branches: [ "main", "feat/manager" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main", "feat/manager" ]

env:
  IMAGE_NAME: ${{ vars.IMG_NAME }}
  CONTAINER_ID: ${{ vars.CONTAINER_ID }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: manager
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      - name: Log into registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./cms
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    environment: manager
    needs: build
    steps:
      - name: "Trigger Portainer Deploy"
        run: curl -X "POST" "${{secrets.SERVER_URL}}/${{env.CONTAINER_ID}}"